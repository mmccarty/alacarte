.row
  .span2= render 'tutorials/side_bar'

  .span10
    %h1.page-header
      Edit Unit : #{@unit.title}

    = report_errors @unit
    = form_for [@tutorial, @unit] do |f|
      %fieldset
        .control-group
          %label.control-label{ :for => 'unit_name' }
            Title
            %span.required *
          .controls
            = f.text_field :title, class: 'input-xlarge'
            %i.icon-question-sign{ :data => { :content => 'Enter a unique name for the unit. This name is what will appear as the unit\'s full title.', :html => 'true', :trigger => 'hover' } }
        .control-group
          %label.control-label{ :for => 'unit_name' }
            Slug
            %span.required *
          .controls
            = f.text_field :slug, class: 'input-xlarge'
            %i.icon-question-sign{ :data => { :content => 'Enter a shorten name for the unit. This name should not exceed 15 character. This name is what will appear in the navigation.', :html => 'true', :trigger => 'hover' } }
        .control-group
          %label.control-label{ :for => 'tags' }
            Tags
          .controls
            = f.text_field :tag_list, class: 'input-xlarge'
            %i.icon-question-sign{ :data => { :content => 'Tags are keywords that highlight content on the Unit.<br/><br/>Tips: Seperate individual tags with a comma. Only add 3-5 tags. Use the same tag on similar tutorials to help discovery.', :html => 'true', :trigger => 'hover' } }
            %p.muted
              examples: anthropology, insects, caves
        .control-group
          %label.control-label{ :for => 'unit_description' }
            Description
            %i.icon-question-sign{ :data => { :content => 'The unit description is a short teaser that describes the unit. Tips:  Write complete sentences. Highlight special content on the tutorial.', :html => 'true', :trigger => 'hover' } }
          .controls
            = f.text_area :description, "class" => 'tinymce'
            = tinymce
        .control-group
          .controls
            = f.submit 'Save', :class => 'btn btn-primary submit'
            = f.submit 'Save & Add Modules', :class => 'btn submit'
            = link_to 'Cancel', :back, :class => 'btn btn-cancel'
  - unless @mods.blank?
    %fieldset
      %legend
        Unit Modules
      %ul{ :id => "full#{@unit.id.to_s}" }
        - @mods.each do |resable|
        - res = resable.resource
        - mod = res.mod
          %li{ :id => "item_#{resable.id}" }
            %i.icon-move
            = truncate raw(mod.label), :length => 40
            &nbsp;
            %i.icon-question-sign{ :data => { :content => "#{ render_tooltip(mod) }", :html => 'true', :trigger => 'hover' } }
            &nbsp;
            = awesome_button edit_module_path(mod, type: mod.class), 'edit', 'Edit this module'
            &nbsp;
            = awesome_button module_path(mod, type: mod.class), 'external-link', 'Preview this module'
            &nbsp;
            = link_to '', module_path(mod, type: mod.class), method: :delete, class: 'icon-trash', title: 'Delete this module', confirm: 'Are you sure?'

:javascript
  $('.icon-question-sign').popover();
